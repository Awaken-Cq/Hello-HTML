**JSP (Java Server Page)
servlet과 jsp의 차이
- servlet(*.java) : html in java
//jsp는 실행될때 servlet으로 바껴서 실행된다.
- jsp(*.jsp) : java in html
------------
servlet의 구조
클래스는 public이여야 한다.
http 클래스?를 상속
servlet이 가지고 있는 메소드 override(init(), destroy(), service()..etc)
------------
* compile 기반. : servlet, jsp(run)
(실행시점에 사람이 인식하는 언어를 기계가 인식하는 언어로 바꿔서 실행.)
장점 : 컴퓨터가 해석 등을 할 필요가 없어서 속도가 빠름.
단점 : 디자인과 자바코드를 혼용해야하기 때문에 코딩하기가 어려움
  script 기반. : jsp(code), asp, php
장점 : 코딩하기가 쉬움.
단점 : 코드 자체가 사람이 인식하는 언어이기때문에 compile기반 언어보다 비교적 속도가 느림.

jsp는 코딩시엔 사람이 인식하는 Script 언어이지만 실행시에는 compile 기반의 
servlet으로 바껴서 실행되므로 두 스타일의 장점을 모두 가지고 있음.
jsp는 해당파일 최초 실행시 1번만 servlet으로 바뀌고 수정작업은 작업은 was가 자동으로 해준다.?

tomcat 폴더의 work라는 폴더에서 jsp가 servlet으로 변환되는 작업이 일어난다.

-- Script Element <% java code %> 
1. 선언부 : jsp에서 사용될 변수, 메소드를 선언하는 영역
	jsp의 선언부는 servlet으로 바뀔때 아래와 같이 바뀐다.
	
	형식) <%! java code %> 
	예) 
	<%!
	String name;
	int age;
	public void setZ(){
	
	}
	%>
	
2. 처리부(스크립트릿) : jsp가 호출 될때마다 매번 실행되는 영역.(logic)
 >> (request, response)를 갖고있는 service method.
	
	형식) <% java code %> 
	예)
	<%
	name = request.getParameter("name");
	
	out.println(name);
	%>
	
	
3. 출력부(표현식) : client 출력. (화면에 출력하는 data)
	
	형식) <%= 문자열 %> 
	예)
	<%= name %> == <% out.println(name); %>
	
	주의할점 : <%= name; %> 변수명뒤에 ; 금지

public class ClassName [servlet]{
	
	선언부(변수, 메소드(){})
	
	public void service(request, response){
	
	처리부
	
	out.println("");//출력부(표현식)
	
	}
	
}

jsp에서 한 코딩을 servlet(java)으로 변환시켠 놓은 파일이 저장된 주소.
F:\Javadata\workspace\web\.metadata\.plugins
\org.eclipse.wst.server.core\tmp0\work\Catalina
\localhost\basicjsp\org\apache\jsp

-----------------------------------------------------------------------------------

** directive(지시문) : <%@ 종류 속성1="값1" 속성2="값2" .... 속성N="값N" %>


1. page
buffer, autoFlsh 한쌍.
isThreadSafe : 쓰레드 관리를 was에서 할게 할것인가 개발자가 직접 할것인가?
(동기, 비동기)
Extends : jsp가 servlet으로 변환될때 상속
톰캣은 HttpJspBase를 자동으로 상속하지만
다른 was를 쓰게되면 각자 자기서버에 최적화된 클래스를 상속받기 때문.
보통 최적화된 클래스를 쓰는게 맞긴함.

contentType="text/html;charset=utf-8"
=>내가 보내는 text는  html문서이며 utf-8로 변환해라.(보낼때)
pageEncoding="utf-8"
=> html 문서상에서 글자를 쓸때 utf-8로 쓰겠다.(쓸때)
즉 위의 2개는 같아야한다.

왠만한건 이클립스가 다 해주기 때문에 우리가 쓸껀 거의 import밖에없고,
만약 다른 프로그램을 쓴다면 쓸건 contentType, pageEncoding, import 3가지정도

주의사항
1) 지시문에서 속성사이에는 공백이있어야한다.
2) 지시문은 최상단쪽에 있어야한다.

2. include



3. taglib




